services:
  web:
    build:
      context: ../web
      dockerfile: Dockerfile
      target: development
    container_name: joovi-web-dev
    ports:
      - "4321:4321"
    environment:
      - NODE_ENV=development
      - PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ../web:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - joovi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4321"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  server:
    build:
      context: ../server
      dockerfile: Dockerfile
      target: development
    container_name: joovi-server-dev
    ports:
      - "8000:8000"
    environment:
      - PYTHON_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=joovi
      - DB_USER=joovi
      - DB_PASSWORD=joovi_dev_password
      - DEBUG=true
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - EMAIL_FROM=noreply@joovi.local
      - EMAIL_FROM_NAME=Joovi
      - FRONTEND_URL=http://localhost:4321
    volumes:
      - ../server:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    networks:
      - joovi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  postgres:
    image: postgres:16-alpine
    container_name: joovi-postgres-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=joovi
      - POSTGRES_PASSWORD=joovi_dev_password
      - POSTGRES_DB=joovi
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - joovi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U joovi"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: joovi-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - joovi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  mailhog:
    image: mailhog/mailhog:latest
    container_name: joovi-mailhog-dev
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - joovi-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8025"]
      interval: 5s
      timeout: 3s
      retries: 5

  celery-worker:
    build:
      context: ../server
      dockerfile: Dockerfile
      target: development
    container_name: joovi-celery-worker-dev
    command: celery -A joovi.email.celery worker --loglevel=info
    environment:
      - PYTHON_ENV=development
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - EMAIL_FROM=noreply@joovi.local
      - EMAIL_FROM_NAME=Joovi
      - FRONTEND_URL=http://localhost:4321
    depends_on:
      redis:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    volumes:
      - ../server:/app
    networks:
      - joovi-network
    restart: unless-stopped

networks:
  joovi-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
