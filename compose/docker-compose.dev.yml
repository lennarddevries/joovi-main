services:
  web:
    build:
      context: ../web
      dockerfile: Dockerfile
      target: development
    container_name: joovi-web-dev
    ports:
      - "4321:4321"
    environment:
      - NODE_ENV=development
      - PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ../web:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - joovi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4321"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  server:
    build:
      context: ../server
      dockerfile: Dockerfile
      target: development
    container_name: joovi-server-dev
    ports:
      - "8000:8000"
    environment:
      - PYTHON_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=joovi
      - DB_USER=joovi
      - DB_PASSWORD=joovi_dev_password
      - DEBUG=true
    volumes:
      - ../server:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - joovi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  postgres:
    image: postgres:16-alpine
    container_name: joovi-postgres-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=joovi
      - POSTGRES_PASSWORD=joovi_dev_password
      - POSTGRES_DB=joovi
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - joovi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U joovi"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  joovi-network:
    driver: bridge

volumes:
  postgres-data:
